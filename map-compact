#!/usr/bin/perl
use strict;
use warnings;
#
# compact the log file by outputting the rendered map as "OLD:" units
#
# FIXME - share code with showmap.cgi
#
use Data::Dumper;

use cities;

my $x=20000;
my $y=20000;

my $max_x;
my $max_y;
my $min_x;
my $min_y;

my %map;
# storage for minimums and maximums
my %map_x;

open LOG,$cities::logfile or die "could not open $cities::logfile $!\n";

while(<LOG>) {
	#print $_;
	chomp;
	if ( $_ =~ m/^LOC: (-?\d+), (-?\d+)/ ) {
		$x=$1;
		$y=$2;
        } elsif ( $_ =~ m/^VISIT: (-?\d+), (-?\d+)/) {
                my $thisx = $1;
                my $thisy = $2;
		if (!$map{$thisy}{$thisx}{visited}) {
			print "VISIT: $thisx, $thisy\n";
		}
                $map{$thisy}{$thisx}{visited}++;
	} elsif ( $_ =~ m/^SUR: (-?\d+), (-?\d+), "([^"]+)", "([^"]+)"/) {
		my $thisx = $x+$1;
		my $thisy = $y+$2;
		my $class = $3;
		my $name = $4;
                my $visited=0;
                if ($1 == 0 && $2 == 0) {
                        $visited=1;
                }
		$class =~ s/location //;
		$map{$thisy}{$thisx}{class} = $class;
		$map{$thisy}{$thisx}{name} = $name;
		$map_x{$thisx}=1;
		if ($visited) {
			if (!$map{$thisy}{$thisx}{visited}) {
				print "VISIT: $thisx, $thisy\n";
			}
			$map{$thisy}{$thisx}{visited}++;
		}
	} elsif ( $_ =~ m/^MAP: (-?\d+), (-?\d+), "([^"]+)"/) {
		my $thisx = $x+$1;
		my $thisy = $y+$2;
		my $class = $3;
		$class =~ s/ map_loc//;
		$map{$thisy}{$thisx}{class} = $class;
		$map_x{$thisx}=1;
	} elsif ( $_ =~ m/^You go North./) {
		$y++;
	} elsif ( $_ =~ m/^You go South./) {
		$y--;
	} elsif ( $_ =~ m/^You go East./) {
		$x++;
	} elsif ( $_ =~ m/^You go West./) {
		$x--;
	} elsif ( $_ =~ m/^OLD: (-?\d+), (-?\d+), "([^"]*)", "([^"]*)"/) {
		# An old location that I have preloaded from my notes
		my $thisx = $1;
		my $thisy = $2;
		my $class = $3;
		my $name = $4;
		$class =~ s/location //;
		$map{$thisy}{$thisx}{class} = $class;
		$map{$thisy}{$thisx}{name} = $name;
		$map_x{$thisx}=1;
	} elsif ( $_ =~ m/^OLD: (-?\d+), (-?\d+), "([^"]*)"/) {
		# An old location that I have preloaded from my notes
		my $thisx = $1;
		my $thisy = $2;
		my $class = $3;
		$class =~ s/location //;
		$map{$thisy}{$thisx}{class} = $class;
		$map_x{$thisx}=1;
	}
}
close(LOG);

my @xvals = sort {$a<=>$b} keys %map_x;
my @yvals = sort {$a<=>$b} keys %map;

$min_x=shift(@xvals);
$max_x=pop(@xvals);
$min_y=shift(@yvals);
$max_y=pop(@xvals);

#print "map size [$min_x,$min_y] - [$max_x,$max_y]\n";
#print "last location: $x, $y\n";
#print Dumper(\%map);

my $row=$max_y;
while ($row>$min_y-1) {
	
	for my $col ($min_x..$max_x) {
		my $class = $map{$row}{$col}{class};
		my $name = $map{$row}{$col}{name};
		if (defined $class) {
			print 'OLD: ', $col, ', ', $row, ', "',$class,'"';
			if (defined $name) {
				print ', "',$name,'"';
			}
			print "\n";
		}
	}

	$row--;
}

print "LOC: $x, $y\n";

